// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:root@localhost:3306/airnbnn"
}

model User {
  id        String     @id @default(uuid())
  username  String     @db.VarChar(30)
  fullname  String     @db.VarChar(50)
  email     String     @unique(map: "email_UNIQUE") @db.VarChar(200)
  cpf       String     @default("11111111111") @db.VarChar(11)
  phone     String     @default("99999999999") @db.VarChar(11)
  address   String     @default("rua tal") @db.VarChar(100)
  state     String     @default("SP") @db.VarChar(2)
  city      String     @default("caraguatatuba") @db.VarChar(50)
  cep       String     @default("11111111") @db.VarChar(8)
  photo     String     @default("/photo") @db.VarChar(255)
  roleId    Int
  anuncio   Anuncio[]
  feedback  Feedback[]
  createdAt DateTime   @default(now()) //adicionado na sprint 2

  role Role @relation(fields: [roleId], references: [id])
}

model Role {
  id        Int      @id @default(autoincrement())
  descricao String   @db.VarChar(30)
  user      User[]
  createdAt DateTime @default(now()) //adicionado na sprint 2
}

model Anuncio {
  id             String        @id @default(uuid())
  title          String        @db.VarChar(40)
  street         String        @db.VarChar(100) //adicionado na sprint 2
  bairro         String        @db.VarChar(100) //adicionado na sprint 2
  cidade         String        @db.VarChar(100) //adicionado na sprint 2
  cep            String        @db.VarChar(100) //adicionado na sprint 2
  numero         Int    //adicionado na sprint 2
  complement     String?       @db.VarChar(100) //adicionado na sprint 2
  latitude       Float? // Campo opcional para latitude//adicionado na sprint 2
  longitude      Float? //adicionado na sprint 2
  description    String        @db.VarChar(500)
  userId         String
  tipoImovelId   String
  tipoEspacoId   String
  qtdMaxHospedes Int
  feedback       Feedback[]
  createdAt      DateTime      @default(now()) //adicionado na sprint 2
  Comodidades    Comodidades[] //adicionado na sprint 3

  user       User       @relation(fields: [userId], references: [id])
  tipoimovel TipoImovel @relation(fields: [tipoImovelId], references: [id])
  tipoespaco TipoEspaco @relation(fields: [tipoEspacoId], references: [id])
}

model TipoImovel {
  id        String    @id @default(uuid())
  descricao String    @db.VarChar(30)
  anuncio   Anuncio[]
  createdAt DateTime  @default(now()) //adicionado na sprint 2
}

model TipoEspaco {
  id        String    @id @default(uuid())
  descricao String    @db.VarChar(30)
  anuncio   Anuncio[]
  createdAt DateTime  @default(now()) //adicionado na sprint 2
}

model Feedback {
  id        String   @id @default(uuid())
  descricao String   @db.VarChar(30)
  nota      Int
  anuncioId String
  userId    String
  createdAt DateTime @default(now()) //adicionado na sprint 2

  user    User    @relation(fields: [userId], references: [id])
  anuncio Anuncio @relation(fields: [anuncioId], references: [id])
}

model Comodidades {
  id        String   @id @default(uuid()) //adicionado na sprint 3
  anuncioId String //adicionado na sprint 3
  descricao String   @db.VarChar(50) //adicionado na sprint 3
  categoria String   @db.VarChar(30) //adicionado na sprint 3
  principal Boolean //adicionado na sprint 3
  createdAt DateTime @default(now()) //adicionado na sprint 3

  anuncio Anuncio @relation(fields: [anuncioId], references: [id]) //adicionado na sprint 3
}
