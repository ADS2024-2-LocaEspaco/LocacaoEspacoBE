// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:aluno@localhost:3306/locacao-espaco"
}

model User {
  id          String @id @default(uuid())
  username    String @db.VarChar(30)
  fullname    String @db.VarChar(50)
  email       String @unique(map: "email_UNIQUE") @db.VarChar(200)
  cpf         String @db.VarChar(11)
  phone       String @db.VarChar(11)
  address     String @db.VarChar(100)
  state       String @db.VarChar(2)
  city        String @db.VarChar(50)
  cep         String @db.VarChar(8)
  photo       String @db.VarChar(255)
  roleId      Int
  anuncio     Anuncio[]
  feedback    Feedback[]

  role    Role @relation(fields: [roleId], references: [id])
}

model Role {
  id        Int @id @default(autoincrement())
  descricao String @db.VarChar(30)
  user      User[]
}

model Anuncio {
  id             String @id @default(uuid())
  title          String @db.VarChar(40)
  address        String @db.VarChar(100)
  description    String @db.VarChar(200)
  userId         String
  tipoImovelId   String
  tipoEspacoId   String
  qtdMaxHospedes Int
  feedback       Feedback[]

  user           User @relation(fields: [userId], references: [id])
  tipoimovel     TipoImovel @relation(fields: [tipoImovelId], references: [id])
  tipoespaco     TipoEspaco @relation(fields: [tipoEspacoId], references: [id])
}

model TipoImovel {
  id        String @id @default(uuid())
  descricao String @db.VarChar(30)
  anuncio   Anuncio[]
}

model TipoEspaco {
  id        String @id @default(uuid())
  descricao String @db.VarChar(30)
  anuncio   Anuncio[]
}

model Feedback {
  id        String @id @default(uuid())
  descricao String @db.VarChar(30)
  nota      Int
  anuncioId String
  userId    String

  user      User @relation(fields: [userId], references: [id])
  anuncio    Anuncio @relation(fields: [anuncioId], references: [id])
}

